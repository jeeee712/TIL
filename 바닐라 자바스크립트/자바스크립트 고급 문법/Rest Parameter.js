// 일반적인 함수 선언식은 함수에 파라미터를 몇 개 사용할지 선언한다.
// 만약 파라미터의 개수가 정해져 있으면 그 범위 내에서만 계산을 할 수 있게 되기 때문에 제대로 된 기능을 구현할 수 없다.

function sum(x1, x2) {
  let y = x1 + x2;

  return y;
}

sum(5, 7);

function sum(x1, x2, x3, x4) {
  let y = x1 + x2 + x3 + x4;

  return y;
}

sum(5, 7, 3, 9);

// Rest Parameter는 파라미터로 몇 개의 파라미터가 전달될지 모를 경우 유용하게 쓸 수 있다.
// 함수의 파라미터를 선언할 때 "...파라미터명" 형식을 사용하면 함수를 호출할 때 파라미터 값을 개수에 상관없이 사용할 수 있게 된다.

function sum(...args) {
  // 파라미터를 이렇게 선언하면, 함수 호출 시 파라미터를 개수에 상관없이 할당할 수 있고, 이렇게 할당된 값은 배열로 저장이 됨
  let total = 0;
  for (let x of args) {
    // 파라미터가 배열로 저장이 되기 때문에 for-of문을 사용해서 전달받은 파라미터 값을 모두 확인해야 함
    total += x;
  }

  return total;
}

sum(3, 2, 5, 7, 4, 23); // 파라미터 값으로 6개 전달
sum(3, 2); // 파라미터 값으로 2개 전달
sum(21, 17, 38); // 파라미터 값으로 3개 전달
